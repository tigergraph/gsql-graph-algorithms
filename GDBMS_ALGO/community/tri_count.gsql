CREATE TEMPLATE QUERY GDBMS_ALGO.community.tri_count(
  SET<STRING> v_type_set,
  SET<STRING> e_type_set
) SYNTAX V1 {

    /*
    First Author: xuanlei.lin@tigergraph.com
    First Commit Date: 2024-07-17

    Recent Author: xuanlei.lin@tigergraph.com
    Recent Commit Date: 2024-07-17

    Repository:
        https://github.com/tigergraph/gsql-graph-algorithms/tree/master/algorithms/Community

    Maturity:
        Production

    Description: 
        This query computes the total number of triangles in the graph.

    Publications:
        NA

    TigerGraph Documentation:
        https://docs.tigergraph.com/graph-ml/current/community-algorithms/triangle-counting

    Parameters:
        v_type_set:
            The set of vertex types to traverse.
        e_type_set:
            The set of edge types to traverse.
    */

  SumAccum<INT> @@sum_tri_count;
  SetAccum<VERTEX> @set_neighbors;
  Nodes = {v_type_set};

  // Build neighbor sets manually, only for vertices with smaller IDs in the triangle.
  // This ensures that only two of the three vertices in a triangle will build neighbor sets.
  Tmp = SELECT t
        FROM Nodes:s-(e_type_set)- v_type_set:t
        WHERE getvid(s) > getvid(t)
        ACCUM t.@set_neighbors += s;

  // Compute the intersection of neighbor sets to count triangles.
  // This step ensures that each triangle is counted only once.
  Tmp = SELECT t
        FROM Nodes:s-(e_type_set)- :t
        WHERE getvid(s) > getvid(t)
        ACCUM @@sum_tri_count += COUNT(s.@set_neighbors INTERSECT t.@set_neighbors);

  // Output the results
  PRINT @@sum_tri_count AS num_triangles;
}
