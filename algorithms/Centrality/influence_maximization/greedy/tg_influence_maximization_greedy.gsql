CREATE DISTRIBUTED QUERY tg_influence_maximization_greedy(STRING v_type,STRING e_type,STRING weight_attribute,INT top_k,
  BOOL print_results = True, STRING file_path = "") SYNTAX V1 {

    /*
    First Author: <First Author Name>
    First Commit Date:  <First Commit Date>

    Recent Author: <Recent Commit Author Name>
    Recent Commit Date: <Recent Commit Date>


    Repository:
        https://github.com/tigergraph/gsql-graph-algorithms/tree/master/algorithms/Centrality

    Maturity:
        Production

    Description: 
        get the vertex which has maximum influence.

    Publications:
        https://www.cs.cornell.edu/home/kleinber/kdd03-inf.pdf

    TigerGraph Documentation:
        https://docs.tigergraph.com/graph-ml/current/centrality-algorithms/influence-maximization

    Parameters:
        v_type:
            vertex types to traverse
        e_type:
            edge types to traverse
        weight_attribute:
            enter weight attribute name
        top_k:
            report only this many top scores
        file_path:
            file to write CSV output to
        print_results:
            If True, to print the results
    */

  /* get the vertex which has maximum influence.
  Parameters:
  v_type: vertex types to traverse
  e_type: edge types to traverse
  weight_attribute: enter weight attribute name
  top_k: report only this many top scores
  file_path: file to write CSV output to
  print_results: whether to print the results
   */  

  TYPEDEF TUPLE<VERTEX Vertex_ID, FLOAT score> Vertex_Score;
  HeapAccum<Vertex_Score>(top_k, score DESC) @@top_scores_heap;
  OrAccum @or_in_seed;
  OrAccum @or_influenced;
  SumAccum<FLOAT> @sum_influence_value;
  ListAccum<Vertex_Score> @@res_list;
  VERTEX k;
  FILE f (file_path);
  start = {v_type};

  FOREACH i in RANGE[0,top_k-1] DO
      start = SELECT s
              FROM start:s-(e_type:e)-v_type:v
              WHERE s.@or_in_seed == FALSE AND v.@or_influenced == FALSE
              ACCUM
                  IF weight_attribute != ""  THEN
                      s.@sum_influence_value+=e.getAttr(weight_attribute,"FLOAT")
                  ELSE
                      s.@sum_influence_value+=1
                  END
              POST-ACCUM
                  @@top_scores_heap+=Vertex_Score(s,s.@sum_influence_value),
                  s.@sum_influence_value=0;

      k= @@top_scores_heap.top().Vertex_ID ;
      @@res_list += @@top_scores_heap.top();
      temp = SELECT s
             FROM start:s-(e_type:e)-v_type:v
             WHERE s==k
             ACCUM
                  v.@or_influenced+=TRUE,s.@or_in_seed+=TRUE;
       @@top_scores_heap.clear();
  END;
  #Output
  IF file_path != "" THEN
      f.println("Vertex_ID", "Vertex Rank");
      FOREACH i IN RANGE[0,@@res_list.size()-1] DO
          f.println(@@res_list.get(i).Vertex_ID,i+1);
      END;
  END;

  IF print_results THEN
      PRINT @@res_list;
  END;
}
