CREATE QUERY tg_tri_count(STRING v_type, STRING e_type)  SYNTAX V1 {

# Compute the total number of triangles in the GRAPH. No input parameters are needed.
SumAccum<INT> @@sum_cnt;
SetAccum<VERTEX> @self_set;

all = {v_type};
all = SELECT s
      FROM all:s 
      ACCUM s.@self_set += s;

# For each edge e, the number of triangles that contain e is equivalent
# to the number of common neighbors between vertices s and t 
        
tmp = SELECT t
      FROM all:s -((e_type):e) -:t
      WHERE getvid(s) > getvid(t)
      ACCUM INT c1 = COUNT(s.neighbors(e_type) MINUS s.@self_set),
            INT c2 = COUNT((s.neighbors(e_type) MINUS s.@self_set) MINUS (t.neighbors(e_type) MINUS t.@self_set)),
            @@sum_cnt += c1-c2;
                            
# Each triangle is counted 3 times for each edge, so final result is divided by 3
PRINT @@sum_cnt/3 AS num_triangles;
}
